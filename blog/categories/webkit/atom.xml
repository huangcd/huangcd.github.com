<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Webkit | 流水笔记]]></title>
  <link href="http://huangcd.github.com/blog/categories/webkit/atom.xml" rel="self"/>
  <link href="http://huangcd.github.com/"/>
  <updated>2012-07-27T13:54:33+08:00</updated>
  <id>http://huangcd.github.com/</id>
  <author>
    <name><![CDATA[huangcd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[WebKit 网页装载流程]]></title>
    <link href="http://huangcd.github.com/blog/2010/04/28/webkit--wang-ye-zhuang-zai-liu-cheng/"/>
    <updated>2010-04-28T00:00:00+08:00</updated>
    <id>http://huangcd.github.com/blog/2010/04/28/webkit--wang-ye-zhuang-zai-liu-cheng</id>
    <content type="html"><![CDATA[<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>[code]
</span><span class='line'>FrameLoader.cpp
</span><span class='line'>2048: RefPtr&lt;DocumentLoader&gt; loader = m_client-&gt;createDocumentLoader(request, substituteData);
</span><span class='line'>2051: load(loader.get());
</span><span class='line'>2083: void FrameLoader::load(DocumentLoader&lt;em> newDocumentLoader)
</span><span class='line'>(
</span><span class='line'>2085: ResourceRequest&amp; r = newDocumentLoader-&gt;request();
</span><span class='line'>2086: addExtraFcd ieldsToMainResourceRequest(r);
</span><span class='line'>)
</span><span class='line'>2110: loadWithDocumentLoader(newDocumentLoader, type, 0);
</span><span class='line'>2013: void FrameLoader::loadWithDocumentLoader(DocumentLoader&lt;/em> loader, FrameLoadType type, PassRefPtr&lt;FormState&gt; prpFormState)
</span><span class='line'>2130~2156: policyChecker()-&gt;checkNavigationPolicy()
</span><span class='line'>3533: void FrameLoader::continueLoadAfterNavigationPolicy(const ResourceRequest&amp;, PassRefPtr&lt;FormState&gt; formState, bool shouldContinue)
</span><span class='line'>3596~3599:
</span><span class='line'>if (formState)
</span><span class='line'>m_client-&gt;dispatchWillSubmitForm(&amp;PolicyChecker::continueLoadAfterWillSubmitForm, formState);
</span><span class='line'>else
</span><span class='line'>continueLoadAfterWillSubmitForm();
</span><span class='line'>3093: void FrameLoader::continueLoadAfterWillSubmitForm()
</span><span class='line'>3119: if (!m_provisionalDocumentLoader-&gt;startLoadingMainResource(identifier))
</span><span class='line'>DocumentLoader.cpp
</span><span class='line'>717: bool DocumentLoader::startLoadingMainResource(unsigned long identifier)
</span><span class='line'>720: m_mainResourceLoader = MainResourceLoader::create(m_frame);
</span><span class='line'>727: if (!m_mainResourceLoader-&gt;load(m_request, m_substituteData)) {
</span><span class='line'>MainResourceLoader.cpp
</span><span class='line'>525: bool MainResourceLoader::load(const ResourceRequest&amp; r, const SubstituteData&amp; substituteData)
</span><span class='line'>544: if (loadNow(request)) {
</span><span class='line'>492: bool MainResourceLoader::loadNow(ResourceRequest&amp; r)
</span><span class='line'>520: m_handle = ResourceHandle::create(r, this, m_frame.get(), false, true);
</span><span class='line'>ResourceHandle.cpp (locate at WebCore/platform/network)
</span><span class='line'>46: PassRefPtr&lt;ResourceHandle&gt; ResourceHandle::create(const ResourceRequest&amp; request, ResourceHandleClient&lt;em> client, Frame&lt;/em> frame, bool defersLoading, bool shouldContentSniff)
</span><span class='line'>64: if (newHandle-&gt;start(frame))
</span><span class='line'>(the start function depends on platform, take QT as example)
</span><span class='line'>ResourceHandleQt.cpp
</span><span class='line'>119: bool ResourceHandle::start(Frame&lt;em> frame)
</span><span class='line'>141: d-&gt;m_job = new QNetworkReplyHandler(this, QNetworkReplyHandler::LoadMode(d-&gt;m_defersLoading));
</span><span class='line'>QtNetworkReplyHandler.cpp
</span><span class='line'>130: QNetworkReplyHandler::QNetworkReplyHandler(ResourceHandle&lt;/em> handle, LoadMode loadMode)
</span><span class='line'>168: start();
</span><span class='line'>414: void QNetworkReplyHandler::start()
</span><span class='line'>(
</span><span class='line'>420: QNetworkAccessManager&lt;em> manager = d-&gt;m_frame-&gt;page()-&gt;networkAccessManager();
</span><span class='line'>433: m_reply = manager-&gt;get(m_request);
</span><span class='line'>437: m_reply = manager-&gt;post(m_request, postDevice);
</span><span class='line'>476: connect(m_reply, SIGNAL(finished()), this, SLOT(finish()), SIGNAL_CONN);
</span><span class='line'>-&gt;229: void QNetworkReplyHandler::finish()
</span><span class='line'>--&gt;252: client-&gt;didFinishLoading(m_resourceHandle);
</span><span class='line'>485: connect(m_reply, SIGNAL(readyRead()), this, SLOT(forwardData()), SIGNAL_CONN);
</span><span class='line'>-&gt;357: void QNetworkReplyHandler::forwardData()
</span><span class='line'>--&gt;398: client-&gt;didReceiveData(m_resourceHandle, data.constData(), data.length(), data.length() /&lt;/em>FixMe&lt;em>/);
</span><span class='line'>489: connect(m_reply, SIGNAL(uploadProgress(qint64, qint64)), this, SLOT(uploadProgress(qint64, qint64)), SIGNAL_CONN);
</span><span class='line'>-&gt;402: void QNetworkReplyHandler::uploadProgress(qint64 bytesSent, qint64 bytesTotal)
</span><span class='line'>--&gt;411: client-&gt;didSendData(m_resourceHandle, bytesSent, bytesTotal);
</span><span class='line'>484: connect(this, SIGNAL(processQueuedItems()), this, SLOT(sendQueuedItems()), SIGNAL_CONN);
</span><span class='line'>-&gt;509: void QNetworkReplyHandler::sendQueuedItems()
</span><span class='line'>)
</span><span class='line'>(Qt implements ResourceHandleClient for class WebCoreSynchronousLoader in ResourcehandleQt.cpp)
</span><span class='line'>restart from 398: client-&gt;didReceiveData(m_resourceHandle, data.constData(), data.length(), data.length() /&lt;/em>FixMe&lt;em>/);
</span><span class='line'>ResourceLoader.cpp
</span><span class='line'>248: void ResourceLoader::didReceiveData(const char&lt;/em> data, int length, long long lengthReceived, bool allAtOnce)
</span><span class='line'>260: addData(data, length, allAtOnce);
</span><span class='line'>MainResourceLoader.cpp
</span><span class='line'>143: void MainResourceLoader::addData(const char&lt;em> data, int length, bool allAtOnce)
</span><span class='line'>146: frameLoader()-&gt;receivedData(data, length);
</span><span class='line'>FrameLoader.cpp
</span><span class='line'>2174: void FrameLoader::receivedData(const char&lt;/em> data, int length)
</span><span class='line'>2176: activeDocumentLoader()-&gt;receivedData(data, length);
</span><span class='line'>DocumentLoader.cpp
</span><span class='line'>288: void DocumentLoader::receivedData(const char&lt;em> data, int length)
</span><span class='line'>292: commitLoad(data, length);
</span><span class='line'>272: void DocumentLoader::commitLoad(const char&lt;/em> data, int length)
</span><span class='line'>280: frameLoader-&gt;committedLoad(this, data, length);
</span><span class='line'>FrameLoader.cpp
</span><span class='line'>3350: void FrameLoader::committedLoad(DocumentLoader&lt;em> loader, const char&lt;/em> data, int length)
</span><span class='line'>(depend on platform, take Qt as example)
</span><span class='line'>FrameLoaderClientQt.cpp
</span><span class='line'>741: void FrameLoaderClientQt::committedLoad(WebCore::DocumentLoader&lt;em> loader, const char&lt;/em> data, int length)
</span><span class='line'>751: fl-&gt;addData(data, length);
</span><span class='line'>FrameLoader.cpp
</span><span class='line'>1544: void FrameLoader::addData(const char&lt;em> bytes, int length)
</span><span class='line'>1549: write(bytes, length);
</span><span class='line'>889: void FrameLoader::write(const char&lt;/em> str, int len, bool flush)
</span><span class='line'>949: tokenizer-&gt;write(decoded, true);
</span><span class='line'>HTMLTokenizer.cpp
</span><span class='line'>1624: void HTMLTokenizer::write(const SegmentedString&amp; str, bool appendData)
</span><span class='line'>1633~1648: try to execute script
</span><span class='line'>1684: while (!m_src.isEmpty() &amp;&amp; (!frame || !frame-&gt;redirectScheduler()-&gt;locationChangePending())) {
</span><span class='line'>(
</span><span class='line'>1760: processToken();
</span><span class='line'>1913: PassRefPtr&lt;Node&gt; HTMLTokenizer::processToken()
</span><span class='line'>1941: n = m_parser-&gt;parseToken(&amp;m_currentToken);
</span><span class='line'>HTMLParser.cpp
</span><span class='line'>230: PassRefPtr&lt;Node&gt; HTMLParser::parseToken(Token&lt;em> t)
</span><span class='line'>224: inline bool HTMLParser::insertNodeAfterLimitBlockDepth(Node&lt;/em> n, bool flat)
</span><span class='line'>352: bool HTMLParser::insertNode(Node* n, bool flat)
</span><span class='line'>n-&gt;attach();
</span><span class='line'>404: m_document-&gt;frame()-&gt;loader()-&gt;dispatchDocumentElementAvailable();
</span><span class='line'>)
</span><span class='line'>FrameLoader.cpp
</span><span class='line'>3985: void FrameLoader::dispatchDocumentElementAvailable()
</span><span class='line'>3987: m_frame-&gt;injectUserScripts(InjectAtDocumentStart); (script!!)
</span><span class='line'>3988: m_client-&gt;documentElementAvailable(); (depend on platform)
</span><span class='line'>[/code]&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2010.4.28 Webkit]]></title>
    <link href="http://huangcd.github.com/blog/2010/04/28/2010-4-28-webkit/"/>
    <updated>2010-04-28T00:00:00+08:00</updated>
    <id>http://huangcd.github.com/blog/2010/04/28/2010-4-28-webkit</id>
    <content type="html"><![CDATA[<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>今天都在看Webkit源码，总结一下：&lt;br>
</span><span class='line'>核心的两部分应该是WebCore和JavascriptCore，大致上来说，WebCore负责HTML和CSS及图片等资源的解 析，JavascriptCore负责Javascript脚本的解析和执行。JavascriptCore还没看，主要是看了WebCore部分。&lt;br>
</span><span class='line'>WebCore既然叫Core，其实就只有很Core的东西，也就是很单纯的解析。至于说如何获取数据，如何把页面显示出来，甚至如何处理与用户之间的交 互等功能就不是它来做的，而是让一些不那么Core的模块来做。而且这些模块都是平台相关的，win下有win下的实现，qt下有qt下的实现，gtk下 有gtk下的实现。又或者说其实Webkit并不是浏览器，而仅仅是一个引擎。&lt;br>
</span><span class='line'>浏览器的一个经典应用场景是用户给出一个URL（直接输入或者点击链接或者JavaScript解析等方式）。然后浏览器外壳调用FrameLoader 来装载页面。FrameLoader首先检查一些条件(policyCheck())，如URL是否非空、URL是否可达，用户是否取消等等。然后通过 DocumentLoader启动一个MainResourceLoader来装载页面。&lt;br>
</span><span class='line'>MainResource调用network模块中的接口来下载页面内容（ResourceHandle），实际上这里的Resourcehandle已 经是平台相关的内容了，比如在Qt里面，会有ResourceHandleQt来控制，然后调用QtNetworkReplyHandler来处理 HTTP请求（GET， POST等）。接收到数据以后，会有回调函数，告诉MainResourceLoader数据已经接收到了。然后一路返回到FrameLoader开始调 用HTMLTokenizer解析HTML文本。解析过程中，如果遇到Javascript脚本的话，也会调用Javascript引擎（Webkit中 的JavascriptCore，chrome中的V8）来解析。数据被解析完了以后，成了一个一个的node。然后通过 FrameLoaderClient调用外部的壳把内容显示出来。
</span><span class='line'>。。。好像什么都没说清楚。。。&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2010.4.26 PLC、WebKit、社当考试]]></title>
    <link href="http://huangcd.github.com/blog/2010/04/26/2010-4-26-plc-webkit-she-dang-kao-shi/"/>
    <updated>2010-04-26T00:00:00+08:00</updated>
    <id>http://huangcd.github.com/blog/2010/04/26/2010-4-26-plc-webkit-she-dang-kao-shi</id>
    <content type="html"><![CDATA[<p>首先详细分析一下SIMATIC 300(1)的代码（不写点东西的话总容易分神。。。）
显然是先从OB1开始的了，OB1就是俗称的"Main Program Sweep (Cycle)"
首先Call的是StationSendPC函数，也就是FC13（内含DB2--PCRev），学名是
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>” 从站设备原始数据传入DB2“</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>” 从站设备原始数据传入DB2“</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>” 从站设备原始数据传入DB2“</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>[code]
AN I 16.0
= DBX 144.0
[/code]</p>

<p>的结构，<strong>但AN是和上一个RLO and not，似乎就是每一个AN都是和上一个类似代码段的RLO and not一下，也就是说结果是逐个依赖的样子（我说的是什么呢？？？）</strong>。
(号外——补充一个注释：LAR1 P#M100.0 //Load AR1 with a 32-bit pointer constant.)
然后是泵运行状态，代码如下：</p>

<p>[code]
L P#20.0 //取基址
LAR1
L P#162.0
LAR2
L 11
Lop1: NOP 0
T #TmpNum
A I [AR1,P#0.0]
= DBX [AR2,P#0.0]
AN I [AR1,P#0.0]
= DBX [AR2,P#0.1]
+AR1 P#0.2 //输入间隔2
+AR2 P#1.0 //数据块间隔1字节
L #TmpNum
LOOP Lop1
[/code]</p>

<p>好吧，其实我<em><strong>没看懂</strong></em>，所以直接贴上来。。。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>” 从站设备原始数据传入DB2“</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>” 从站设备原始数据传入DB2“</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>” 从站设备原始数据传入DB2“</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>” 从站设备原始数据传入DB2“</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>&lt;div class='bogus-wrapper'>&lt;notextile>&lt;figure class='code'>&lt;div class="highlight">&lt;table>&lt;tr>&lt;td class="gutter">&lt;pre class="line-numbers">&lt;span class='line-number'>1&lt;/span>
</span><span class='line'>&lt;/pre>&lt;/td>&lt;td class='code'>&lt;pre>&lt;code class=''>&lt;span class='line'>” 从站设备原始数据传入DB2“&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/figure>&lt;/notextile>&lt;/div>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>” 从站设备原始数据传入DB2“</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>” 从站设备原始数据传入DB2“</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>” 从站设备原始数据传入DB2“</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>” 从站设备原始数据传入DB2“</span></code></pre></td></tr></table></div></figure></notextile></div>
Web Template Framework, 它provides commonly used functions all over the WebKit codebase.
然后检查发现FrameLoader似乎是整个WebCore的入口，外壳（GTK、QT、Chrome等等）就是调用FrameLoader来载入网页 的，然后FrameLoader目前有一个问题，就是载入网页的时候需要一个外壳（这依赖太纠结了。。。），FrameLoader有几个看起来很 kernel的函数，首先是createWindows，就是新建一个窗口（标签页）的时候调用的吧。然后是各种load，就是载入URL了。</p>

<p>暂时就看了这么多。。。</p>

<p>下午考试，社会主义与当代中国，太纠结了。10道论述题，每道题都是写着歇着突然发现“咦，好像问的不是这个”，怎么办？划掉重写？太浪费时间了。。。试 图转回来？要能转回来就不会写错了。。。然后就像“算了，反正老师未必会看，看了也未必知道我在说什么，知道也可能会同情我写了那么多字”，反正大概应该 可能也许不会挂就是了，然后就开始写下一题了。</p>

<p>晚上突然发现最近几周都忘了下Mentalist，我就说怎么总觉得少看了一部美剧，但具体有想不起来，Lie To Me已经停播，Chuck好像出的话基本都下了，然后今天终于想起是Mentalist，一搜，居然差3集没看，真是哇哈哈哈哈哈哈哈哈哈哈哈</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>” 从站设备原始数据传入DB2“</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>” 从站设备原始数据传入DB2“</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
